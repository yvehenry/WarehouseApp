class WareFlow {
	1 <@>- * User users;
	1 <@>- * UserRole userRoles;
	1 <@>- * ShipmentOrder shipmentOrders;
	1 <@>- * Area areas;
	1 <@>- * Container containers;
	1 <@>- * Item items;
	1 <@>- * ShipmentNote shipmentNotes;
  	1 <@>- * ManagerTask managerTasks;
}

class User {
  lazy String username;
  String password;
  String phoneNumber = null;
  String name = null;
}

class Area {
  String areaName;
}

class Slot {
  unique int slotNo;

}

class UserRole {
	abstract;
}

class Item {
  String itemType;
  int lifeSpan;
}

enum OrderStatus {CLOSED, IN_PROGRESS, RETURNED}

enum Priority {URGENT, NORMAL, LOW}

enum TimeEstimate {
  LESS_THAN_A_DAY, ONE_TO_THREE_DAYS, THREE_TO_SEVEN_DAYS, ONE_TO_THREE_WEEKS, MORE_THAN_THREE_WEEKS
}

class ShipmentOrder {
  int orderNumber;
  String description;
  String shipmentAddress;
  String receiver;
  int quantity;
  OrderStatus orderStatus;
}

class Container {
  unique int containerNumber;
  Date addedDate;
}

class ShipmentNote {
  Date date;
  String note;
}

class Employee {
  isA UserRole;
}

class Client {
  isA UserRole;
  String address;
}

class Manager {
  isA Employee;
  password = "manager";
  username = "manager";
}

association {
  1 User user -- 0..2 UserRole userRole;
  1 Item itemsInContainer -- * Container container;
  * Employee assignedEmployees -- * ShipmentOrder assignedOrders;
  * Employee noteAuthors -- * ShipmentNote notesWritten;
  * Client orderClients -- * ShipmentOrder ordersOpened;
  1 ShipmentOrder linkedOrders -- * Container containersPerOrder;
  1 ShipmentOrder orderToBeNoted -- 1 ShipmentNote note;
  1 Area containerArea -- * Container containerInArea;
  1 Area slotArea <@>- * Slot slots;
    
}

associationClass ManagerTask {
  boolean requiresManagerApproval;
  Priority priority;
  TimeEstimate timeEstimate;
  * Manager;
  1 ShipmentOrder;
}
